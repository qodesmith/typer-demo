import typer from 'typer-js'
import { demoItemChange } from 'actions'
export default backDemo

function backDemo(dispatch, index) {
  typer('#explanation .container')
    .line('Now on to our friend the <span class="lime">back</span> method.')
    .pause(1000)
    .line("You've already been seeing in the demo so far what")
    .line('the <span class="lime">back</span> method can do.')
    .pause(1500)
    .line(`It lets you erase things!`)
    .pause(1000)
    .empty()
    .continue('So what if we wanted to erase the word "rules!"')
    .line('in the example below?')
    .pause(1200)
    .empty()
    .continue("1st argument - supply <span class='lime'>back</span> with a number")
    .line('representing how many characters we want to "erase":')
    .emit('back-1')
    .listen('back-2')

    .pause(1500)
    .empty()
    .continue('As you can see, we\'re looking to "backspace" 13 times.')
    .line('The code below will execute on the screen like this:')
    .pause(750)
    .line('Typer.js is pure JS awesomeness!')
    .back(13)
    .pause(2000)
    .empty()
    .continue('Notice how <span class="lime">back</span>\'s <em>speed</em> was the same as the typing speed?')
    .pause()
    .line('Want to change that?')
    .pause()
    .line('2nd argument - another number representing <span class="lime">back</span>\'s <em>speed</em>:')
    .emit('back-5')
    .listen('back-6')
    .pause(2000)
    .empty('Watch how <span class="lime">back</span> excutes <em>much</em> faster now:')
    .pause(1000)
    .continue('Typer.js is pure JS awesomeness!')
    .back(13, 10)
    .pause(1000)
    .line('Super fast!')
    .pause(1000)
    .continue(' And super fly...')
    .pause()
    .empty()
    .continue('<span class="lime">back</span> has a few more tricks up its sleeve.')
    .pause(750)
    .line('What if you wanted to "erase" the whole line?')
    .pause(1000)
    .back('all', 10)
    .continue('It would be a pain, especially for longer lines, to manually count')
    .line('the characters in order to give <span class="lime">back</span> the correct number.')
    .pause(1000)
    .line('<span class="yellow mono">\'all\'</span> to the rescue!')
    .pause()
    .continue(' Observe:')
    .emit('back-7')
    .listen('back-8')
    .pause(1500)
    .empty()
    .continue('<span class="lime">back</span> has another convenient option:')
    .emit('back-9')
    .listen('back-10')
    .pause(1200)
    .empty()
    .continue('Passing in a negative number, in this case <span class="mono"><span class="pink">-</span><span class="mediumorchid mono">5</span></span>,')
    .line('is the equivalent to saying <em style="text-decoration: underline">erase all but</em> 5 characters.')
    .pause()
    .line('You can see how this would again be convenient for longer lines.')
    .pause(750)
    .line('In the example below we\'ve also provided the second argument, <span class="mediumorchid mono">10</span>, for a speed.')
    .pause(1200)
    .empty()
    .continue('<span class="lime">back</span> has one last option of convenience:')
    .emit('back-11')
    .listen('back-12')
    .pause(1200)
    .empty()
    .continue('This option for <span class="lime">back</span> will empty the line <em>all-at-once</em>.')
    .pause()
    .line('No character-by-character backspacing will occur.')
    .pause()
    .empty()
    .pause()
    .line(['Poof.'])
    .pause(1000)
    .empty()
    .pause()
    .line([' Gone.'])
    .pause(1000)
    .run(function() {
      typerDemo.next('continue');
    });

  const previousExampleContents1 = [
    `typer(<span class="yellow">'.someClass'</span>, <span class="mediumorchid">100</span>)`
  ]
  const previousExampleContents2 = [
    `  .cursor({ block<span class="mediumorchid">: true</span>`,
    `, blink<span class="mediumorchid">:</span> <span class="yellow">'hard'</span> })`
  ].join('')
  const previousExampleContents3 = [
    `  .line(<span class="yellow">'Typer.js rules!'</span>, <span class="mediumorchid">100</span>)`
  ]

  typer('#example .container', 40)
    .cursor({ block: true, blink: 'hard' })
    .line(previousExampleContents1, 1)
    .line([previousExampleContents2], 1)
    .line([previousExampleContents3], 1)
    .listen('back-1')
    .line(`  .back(6)`)
    .back(1)
    .continue('<span class="yellow">\'Typer.js is pure JS awesomeness!\'</span>)')
    .emit('back-2')
    .listen('back-3')
    .line('  .back(<span class="mediumorchid">13</span>)')
    .emit('back-4')
    .listen('back-5')
    .back(1)
    .continue(', <span class="mediumorchid">10</span>)')
    .emit('back-6')
    .listen('back-7')
    .back(7, 10)
    .continue('<span class="yellow">\'all\'</span>)')
    .emit('back-8')
    .listen('back-9')
    .back(6, 10)
    .continue('<span class="pink">-</span><span class="mediumorchid">5</span>, <span class="mediumorchid">10</span>)')
    .emit('back-10')
    .listen('back-11')
    .back(7, 10)
    .continue('<span class="yellow">\'empty\'</span>)')
    .emit('back-12');

}
